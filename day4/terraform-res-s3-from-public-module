terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = "ap-southeast-2"
}

# Create an S3 Bucket
module "s3_bucket" {
  source  = "terraform-aws-modules/s3-bucket/aws"
  version = "~> 3.0"

  bucket = "my-terraform-bucket-${random_string.suffix.result}"

  tags = {
    Name        = "MyTerraformS3"
    Environment = "Dev"
  }
}

resource "random_string" "suffix" {
  length  = 8
  special = false
  upper   = false
}

# Create an RDS MySQL Database
module "rds" {
  source  = "terraform-aws-modules/rds/aws"
  version = "~> 6.0"

  identifier = "my-terraform-rds"

  engine               = "mysql"
  engine_version       = "8.0"
  instance_class       = "db.t3.micro"
  allocated_storage    = 20
  storage_encrypted    = true
  skip_final_snapshot  = true

  username = "admin"
  password = "SuperSecurePassword123"

  publicly_accessible = false
  vpc_security_group_ids = [aws_security_group.rds_sg.id]

  major_engine_version = "8.0"    # ✅ Required for DB option group
  family               = "mysql8.0" # ✅ Required for DB parameter group

  tags = {
    Name        = "MyTerraformRDS"
    Environment = "Dev"
  }
}


# Security Group for RDS
resource "aws_security_group" "rds_sg" {
  name_prefix = "rds-sg-"
  
  ingress {
    from_port   = 3306
    to_port     = 3306
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"] # Restrict this in production
  }
}
